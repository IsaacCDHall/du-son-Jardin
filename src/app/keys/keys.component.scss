// body{
//   // margin:20px;
//
// }

.icons{
  padding: 25px;
  color: #333;
  // bottom: 100px;
  position: absolute;
  max-width: 100%;
  #keyChev{
    border-left: 1px solid #333;
    padding-left: 50px;
    transform: rotate(180deg);

    // margin-left: -100px;
    // color: red;
    &:hover{
      cursor: pointer;
      color: rgba(255, 255, 255, .7);
    }
  }
  #keyGoog{
    margin-left: 50px;
    &:hover{
      cursor: pointer;
      color: rgba(255, 255, 255, .7);
    }
  }
}
hr{
  width: calc(100vw - 2px;);
  border-color: #333;
  top: 82px;
  position: relative;
}


// grid begin

.container{
  // margin-top: 107px;
  margin-top: 83px;
  // margin-bottom: -15px;
  display: grid;
  width: 100vw;
  height: calc(100vh - 93px;);
  // height:100vh;
  grid-template-columns: repeat(3, 1fr);
  .gridCell{
    //temp color for visualization of grid
    background-color: rgba(155, 250, 150, .2);
    &:hover{
      background-color: rgba(255, 255, 255, .7);
    }
  }
}

@media screen and (min-width: 650px) {
  hr{
    //dont make this display none or grid runs above icons
    border-color: black;
  }
}

// amination
.q {
  // display: none;
  position: absolute;
  width: 10%;
  height: 10%;
  padding-right: 55px;
  padding-left: 50px;
  padding-top: 65px;
  // left: calc(200px * 2);
  // top: calc(200px * random([20]);
  background-image: url('./../../assets/img/butterfly.svg');
  background-size:cover;
  background-position: center;
  animation: butterfly 10s;
  animation-duration: 3s;
  // animation-delay: 2s;

}

.w {
  // display: none;
  position: absolute;
  width: 10%;
  height: 10%;
  padding-right: 55px;
  padding-left: 50px;
  padding-top: 65px;
  // left: calc(200px * 2);
  // top: calc(200px * random([20]);
  background-image: url('./../../assets/img/butterfly.svg');
  background-size:cover;
  background-position: center;
  animation: butterfly 10s;
  animation-duration: 3s;
  // animation-delay: 2s;

}


@keyframes butterfly {
  0%{transform: translate(90vw, 0) rotateZ(120deg);}
  20%{transform: translate(90vw, 0) rotateZ(-120deg);}
  21%{transform: translate(50vw, 50vh) rotateZ(120deg);}
  40%{transform: translate(50vw, 0) rotateZ(120deg);}
  60%{transform: translate(50vw, 0) rotateZ(-120deg);}
  61%{transform: translate(10vw, 50vh) rotateZ(120deg);}
  80%{transform: translate(10vw, 0vh) rotateZ(120deg);}
  100%{transform: translate(10vw, 0vh) rotateZ(-120deg);}
}
